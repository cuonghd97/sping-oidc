<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
	<!--<beans:bean class="com.skt.hrs.cmmn.sso.OAuth2Config" id="oAuth2Config" /> -->
	<!-- <beans:bean id="clientRegistrationRepository" factory-bean="oAuth2Config" factory-method="clientRegistrationRepository" 
		/> <beans:bean id="authorizedClientService" factory-bean="oAuth2Config" factory-method="authorizedClientService"> <beans:constructor-arg 
		ref="clientRegistrationRepository" /> </beans:bean> -->

	<!-- <beans:bean id="authorizationRequestRepository" factory-bean="oAuth2Config" factory-method="authorizationRequestRepository" 
		/> -->

	<!--<beans:bean id="userAuthoritiesMapper" factory-bean="oAuth2Config" factory-method="userAuthoritiesMapper" /> -->




	<!--<beans:bean id="customOAuth2UserService" class="com.skt.hrs.cmmn.sso.CustomOAuth2UserService"></beans:bean> -->



	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider>
			<user-service>
				<user name="user" password="{noop}password" authorities="ROLE_USER" />
				<user name="admin" password="{noop}admin" authorities="ROLE_ADMIN" />
			</user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>

	<beans:bean id="oidcUserService"
		class="org.springframework.security.oauth2.client.oidc.userinfo.OidcUserService" />



	<global-method-security secured-annotations="enabled" />


	<http auto-config='true' security-context-explicit-save="true">
		<sec:anonymous enabled="false" />

		<sec:intercept-url pattern="/testLogin" access="permitAll()" />
		<sec:intercept-url pattern="/login" access="permitAll()" />
		<sec:intercept-url pattern="/oauth2/**" access="permitAll()" />
		<sec:intercept-url pattern="/oauth2/authorization/**" access="permitAll()" />

		<sec:intercept-url pattern="/**" access="isAuthenticated()" />

		<!-- <sec:oauth2-login login-page="/login" client-registration-repository-ref="clientRegistrationRepository" authorized-client-service-ref="authorizedClientService" 
			user-service-ref="customOAuth2UserService" authentication-success-handler-ref="ssoAuthenticationSuccessHandler" authorization-request-repository-ref="authorizationRequestRepository" 
			login-processing-url="/login/oauth2/code/*" oidc-user-service-ref="oidcUserService" /> -->

		<sec:oauth2-login login-page="/login" oidc-user-service-ref="oidcUserService" />
		<!-- <sec:custom-filter ref="customFilter" after="OAUTH2_AUTHORIZATION_REQUEST_FILTER" /> -->

		<sec:session-management session-fixation-protection="migrateSession">
		</sec:session-management>
	</http>

	<sec:client-registrations>
		<sec:client-registration registration-id="zure" provider-id="azure-provider"
			client-id="" client-secret=""
			
			redirect-uri="http://localhost:8080/home" />

		<sec:provider provider-id="azure-provider"
			authorization-uri="https://login.microsoftonline.com//oauth2/v2.0/authorize"
			user-info-authentication-method="query"
			token-uri="https://login.microsoftonline.com//oauth2/v2.0/token" />
	</sec:client-registrations>
</beans:beans>

<!--authorization-grant-type="authorization_code" scope="openid,profile,email,offline_access"-->